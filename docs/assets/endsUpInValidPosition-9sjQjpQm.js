import{calculateFinalPosition as n}from"./calculateFinalPosition-DP2hh8aV.js";import{minTileIndex as m,maxTileIndex as p}from"./constants-D9wMxaBn.js";import{metadata as l}from"./Map-B9WyMSq1.js";import"./Grass-BavhgwY0.js";import"./three.core-Bu5rU7E4.js";import"./Three-Bivhf_TF.js";import"./Road-C2uemW3h.js";import"./Car-Q5T3l03N.js";import"./Wheel-C03bxVnY.js";import"./Truck-CQI_NzhJ.js";import"./generateRows-bVBXo6dn.js";import"./index-CnmbM-dR.js";function F(o,e){const t=n(o,e);if(t.rowIndex===-1||t.tileIndex===m-1||t.tileIndex===p+1)return!1;const i=l[t.rowIndex-1];return!(i&&i.type==="forest"&&i.trees.some(r=>r.tileIndex===t.tileIndex))}export{F as endsUpInValidPosition};
