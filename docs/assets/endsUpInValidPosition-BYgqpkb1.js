import{calculateFinalPosition as n}from"./calculateFinalPosition-DP2hh8aV.js";import{minTileIndex as m,maxTileIndex as p}from"./constants-D9wMxaBn.js";import{metadata as l}from"./Map-DTRoDyDw.js";import"./Grass-D94HOHke.js";import"./three.core-IZwRyLr5.js";import"./Three-DORzRoVO.js";import"./Road-CBDd-7dN.js";import"./Car-Cqd5vzn5.js";import"./Wheel-D2dfaNrt.js";import"./Truck-DGmdOD13.js";import"./generateRows-CemkO9Hm.js";import"./index-BdTCZeBf.js";function F(o,e){const t=n(o,e);if(t.rowIndex===-1||t.tileIndex===m-1||t.tileIndex===p+1)return!1;const i=l[t.rowIndex-1];return!(i&&i.type==="forest"&&i.trees.some(r=>r.tileIndex===t.tileIndex))}export{F as endsUpInValidPosition};
