import{calculateFinalPosition as n}from"./calculateFinalPosition-DP2hh8aV.js";import{minTileIndex as m,maxTileIndex as p}from"./constants-D9wMxaBn.js";import{metadata as l}from"./Map-DXy0Fl8H.js";import"./Grass-CYkpYd_z.js";import"./three.core-CVFNDdqD.js";import"./Three-Bzob0eEC.js";import"./Road-CCSlC-20.js";import"./Car-C_hCo3Tq.js";import"./Wheel-CjIOtM0J.js";import"./Truck-BiOAh_y0.js";import"./generateRows-69nbKgpK.js";import"./index-DQyCy5E-.js";function F(o,e){const t=n(o,e);if(t.rowIndex===-1||t.tileIndex===m-1||t.tileIndex===p+1)return!1;const i=l[t.rowIndex-1];return!(i&&i.type==="forest"&&i.trees.some(r=>r.tileIndex===t.tileIndex))}export{F as endsUpInValidPosition};
