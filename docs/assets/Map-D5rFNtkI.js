import{Grass as m}from"./Grass-D94HOHke.js";import{Tree as l}from"./Three-DORzRoVO.js";import{Road as f}from"./Road-CBDd-7dN.js";import{Car as h}from"./Car-Cqd5vzn5.js";import{Truck as u}from"./Truck-DGmdOD13.js";import{generateRows as x}from"./generateRows-DAbHtEHI.js";import{G as I}from"./three.core-IZwRyLr5.js";import"./constants-D9wMxaBn.js";import"./Wheel-D2dfaNrt.js";import"./index-DSI5ljsY.js";const i=new I,c=[];function b(){c.length=0,i.remove(...i.children);for(let n=0;n>-5;n--){const d=m(n);i.add(d)}g()}function g(){const n=x(20),d=c.length;c.push(...n),n.forEach((r,a)=>{const s=d+a+1;if(r.type==="forest"){const t=m(s);r.trees.forEach(({tileIndex:o,height:e})=>{const p=l(o,e);t.add(p)}),i.add(t)}if(r.type==="car"){const t=f(s);r.vehicles.forEach(o=>{const e=h(o.initialTileIndex,r.direction,o.color);o.ref.set(e),t.add(e)}),i.add(t)}if(r.type==="truck"){const t=f(s);r.vehicles.forEach(o=>{const e=u(o.initialTileIndex,r.direction,o.color);o.ref.set(e),t.add(e)}),i.add(t)}})}export{g as addRows,b as initializeMap,i as map,c as metadata};
