
/**
 * 使用集合,值是单元素集合
 * 对比于无类型宇宙
 * 像加法运算不支持传入联合?本质上是加法是类似于类型类的接口interface,go
 *   interface本质上是限制一种超类
 * 
 * 函数在类型校验中,是表达式,即将所有表达式执行. 
 * 
 * 函数的理想调用,是值到函数,返回的结果再到函数,就能实现从左到右的pipline
 * 
 * 类型也是值,包括联合类型
 * 声明函数,将类型绑定到命名变量上,执行这个表达式,获得真实的返回类型
 * 即函数也可用于类型
 * 
 * 这个是函数调用
 * (xx -> xdd -> (ds -> ds))
 * 声明函数,可能是多条语句,
 * x=Any => (
 *  a=xx->y->z,
 *  y=a->xx->b,
 *  c=Tn:m=>ds->ds
 *  f
 * )
 * 类型就Any时应该可以省略,或不省略?
 * 
 * :优先级最高,是类型与变量名的结合
 * =>是函数声明
 * =绑定变量
 * ,分割语句
 */


